// <auto-generated />
using System;
using ConsoleRPG;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleRPG.Migrations
{
    [DbContext(typeof(PlayersContext))]
    partial class PlayersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("ConsoleRPG.Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("PlayerId");

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ConsoleRPG.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Armor_Stat")
                        .HasColumnType("REAL");

                    b.Property<int>("Current_HP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Current_Room")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HP_Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence_Stat")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Magical_Attack_Stat")
                        .HasColumnType("REAL");

                    b.Property<double>("Magical_Resistance_Stat")
                        .HasColumnType("REAL");

                    b.Property<int>("Mend_Wounds_Charges")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Money")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Physical_Attack_Stat")
                        .HasColumnType("REAL");

                    b.Property<int>("Required_XP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Speed_Stat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Strength_Stat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Upgrade_Points")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Vitality_Stat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("XP")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ConsoleRPG.Armor", b =>
                {
                    b.HasBaseType("ConsoleRPG.Item");

                    b.Property<double>("Armor_Points")
                        .HasColumnType("REAL");

                    b.Property<double>("Magical_Resistance")
                        .HasColumnType("REAL");

                    b.Property<int?>("PlayerId1")
                        .HasColumnType("INTEGER");

                    b.HasIndex("PlayerId1");

                    b.HasDiscriminator().HasValue("Armor");
                });

            modelBuilder.Entity("ConsoleRPG.Weapon", b =>
                {
                    b.HasBaseType("ConsoleRPG.Item");

                    b.Property<int>("Attack_Damage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Magical_Damage")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlayerId1")
                        .HasColumnType("INTEGER");

                    b.HasIndex("PlayerId1");

                    b.ToTable("Item", t =>
                        {
                            t.Property("PlayerId1")
                                .HasColumnName("Weapon_PlayerId1");
                        });

                    b.HasDiscriminator().HasValue("Weapon");
                });

            modelBuilder.Entity("ConsoleRPG.Item", b =>
                {
                    b.HasOne("ConsoleRPG.Player", null)
                        .WithMany("Inventory")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("ConsoleRPG.Armor", b =>
                {
                    b.HasOne("ConsoleRPG.Player", null)
                        .WithMany("Worn_Armor")
                        .HasForeignKey("PlayerId1");
                });

            modelBuilder.Entity("ConsoleRPG.Weapon", b =>
                {
                    b.HasOne("ConsoleRPG.Player", null)
                        .WithMany("Worn_Weapons")
                        .HasForeignKey("PlayerId1");
                });

            modelBuilder.Entity("ConsoleRPG.Player", b =>
                {
                    b.Navigation("Inventory");

                    b.Navigation("Worn_Armor");

                    b.Navigation("Worn_Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
